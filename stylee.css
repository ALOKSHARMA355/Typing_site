@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

body {
    font-family: 'Roboto', sans-serif;
    background-color: #282c34;
    color: #ffffff;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
}

.container {
    text-align: center;
    background-color: #1c1f26;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    max-width: 1000px;
    width: 100%;
}

h1 {
    margin-bottom: 20px;
    font-size: 2rem;
}

.text-display {
    margin: 20px 0;
    padding: 20px;
    border: 1px solid #333;
    border-radius: 8px;
    background-color: #2e323b;
    font-size: 1.2rem;
    min-height: 80px;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    color: #ccc;
}

.text-display .word {
    margin: 0px;
    padding: 2px 5px;
    border-radius: 3px;
    transition: background-color 0.3s, color 0.3s;
}

/* .text-display .correct {
    background-color: #4caf50;
    color: #ffffff;
} */

.text-display .incorrect {
    color: #f44336;
}

.text-display .current {
    /* border-bottom: 2px solid #2196f3; */
    background-color: #444;
    height: 25px;
    /* color: #ffffff; */
}

.text-input {
    width: 100%;
    height: 100px;
    padding: 10px;
    font-size: 1.2rem;
    border: 1px solid #333;
    border-radius: 8px;
    background-color: #2e323b;
    color: #ffffff;
    margin-bottom: 20px;
    resize: none;
}

.text-input::placeholder {
    color: #888;
}

.results {
    display: flex;
    justify-content: space-between;
    margin-bottom: 20px;
    font-size: 1.2rem;
}

.start-button {
    padding: 10px 20px;
    font-size: 1.2rem;
    background-color: #2196f3;
    color: #ffffff;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.3s;
}

.start-button:hover {
    background-color: #1769aa;
}















<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Typing Test Game</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="container">
        <h1>Typing Test Game</h1>
        <div id="textDisplay" class="text-display"></div>
        <textarea id="textInput" class="text-input" placeholder="Start typing here..."></textarea>
        <div id="results" class="results">
            <p id="timer">Time: 60s</p>
            <p id="wpm">WPM: 0</p>
        </div>
        <button id="startButton" class="start-button">Start</button>
    </div>
    <script src="script.js"></script>
</body>
</html>
















const textDisplay = document.getElementById('textDisplay');
const textInput = document.getElementById('textInput');
const timerElement = document.getElementById('timer');
const wpmElement = document.getElementById('wpm');
const startButton = document.getElementById('startButton');

const sampleTexts = [
    "The quick brown fox jumps over the lazy dog.",
    `IL had the impression of being abandoned by everyone when, the whole, city rose and left for the summer. I was afraid to be left alone, and for three days I roamed dejectedly through the city, unable to understand what was happening to me. Whether I went to Nevsky Avenue, to the park, or wandered along the embankments, I never came across the people I was accustomed to meet in certain spots at certain hours all year round. They, of course, didn't know me; but I knew them all right`,
    "A journey of a thousand miles begins with a single step.",
    "To be or not to be, that is the question.",
    "All that glitters is not gold.",
    "The early bird catches the worm."
];

let startTime;
let timerInterval;
let words = [];
let currentWordIndex = 0;
let correctChars = 0;

startButton.addEventListener('click', startGame);

function startGame() {
    resetGame();
    const randomText = sampleTexts[Math.floor(Math.random() * sampleTexts.length)];
    words = randomText.split(' ');
    textDisplay.innerHTML = words.map((word, index) => `<span class="word" id="word-${index}">${word}</span>`).join('');
    highlightCurrentWord();
    textInput.focus();
    textInput.addEventListener('input', checkInput);
    startTime = new Date();
    timerInterval = setInterval(updateTimer, 1000);
}

function resetGame() {
    clearInterval(timerInterval);
    textInput.value = '';
    timerElement.textContent = 'Time: 60s';
    wpmElement.textContent = 'WPM: 0';
    textInput.disabled = false;
    textDisplay.innerHTML = '';
    currentWordIndex = 0;
    correctChars = 0;
}

function updateTimer() {
    const currentTime = new Date();
    const elapsedTime = Math.floor((currentTime - startTime) / 1000);
    const remainingTime = 60 - elapsedTime;

    if (remainingTime <= 0) {
        clearInterval(timerInterval);
        calculateWPM();
        textInput.removeEventListener('input', checkInput);
        textInput.disabled = true;
    }

    timerElement.textContent = `Time: ${remainingTime}s`;
}

function checkInput() {
    const inputText = textInput.value.trim();
    const currentWord = words[currentWordIndex];
    const wordElement = document.getElementById(`word-${currentWordIndex}`);

    if (textInput.value.endsWith(' ')) {
        if (inputText === currentWord) {
            wordElement.classList.remove('incorrect');
            wordElement.classList.add('correct');
            correctChars += currentWord.length + 1; // include space
        } else {
            wordElement.classList.add('incorrect');
        }
        textInput.value = '';
        currentWordIndex++;
        highlightCurrentWord();
        if (currentWordIndex === words.length) {
            calculateWPM();
            clearInterval(timerInterval);
            textInput.removeEventListener('input', checkInput);
            textInput.disabled = true;
        }
    } else if (currentWord.startsWith(inputText)) {
        wordElement.classList.remove('incorrect');
    } else {
        wordElement.classList.add('incorrect');
    }
}

function highlightCurrentWord() { 
    document.querySelectorAll('.word').forEach((wordElement, index) => {
        wordElement.classList.remove('current');
        if (index === currentWordIndex) {
            wordElement.classList.add('current');
        }
    });
}

function calculateWPM() {
    const elapsedTime = (new Date() - startTime) / 1000 / 60;
    const wordCount = correctChars / 5;
    const wpm = Math.floor(wordCount / elapsedTime);
    wpmElement.textContent = `WPM: ${wpm}`;
}
















const textDisplay = document.getElementById('textDisplay');
const textInput = document.getElementById('textInput');
const timerElement = document.getElementById('timer');
const wpmElement = document.getElementById('wpm');
const startButton = document.getElementById('startButton');

const sampleTexts = [
    "Common knowledge has bicyclists always riding into the wind, regardless of direction, a perception that is not as wrong as it may seem. On level ground, one rides as fast as is comfortable and because the bicycle is highly efficient, speed is limited by wind resistance. With a tailwind, speeding up until the wind is in one's face is fairly easy, and at that point it becomes a headwind.",
    `I had the impression of being abandoned by everyone when, the whole, city rose and left for the summer. I was afraid to be left alone, and for three days I roamed dejectedly through the city, unable to understand what was happening to me. Whether I went to Nevsky Avenue, to the park, or wandered along the embankments, I never came across the people I was accustomed to meet in certain spots at certain hours all year round. They, of course, didn't know me; but I knew them all right`,
    "A journey of a thousand miles begins with a single step.",
    "Right I am going to tell you how this works. You're going in the drink and I am going to make a cup of tea. Underneath the floor boards is the famous river Thames. I hope for your sakes you can hold your breath for as long as it takes to boil that kettle. After that, I am going to ask you a question, one question. You are going to give me a name and if it's the right name, I send you home warm and dry in a fresh set of clothes. If it's the wrong name, you'll be fed to the crayfish.",
    "Atticus said to Jem one day, I'd rather you shot at tin cans in the backyard, but I know you'll go after birds. Shoot all the blue jays you want, if you can hit 'em, but remember it's a sin to kill a mockingbird.' That was the only time I ever heard Atticus say it was a sin to do something, and I asked Miss Maudie about it.",
    "It is a truth universally acknowledged, that a single man in possession of a good fortune, must be in want of a wife. However little known the feelings or views of such a man may be on his first entering a neighbourhood, this truth is so well fixed in the minds of the surrounding families, that he is considered the rightful property of some one or other of their daughters.",
    "Call me Ishmael. Some years ago-never mind how long preciselyâ€”having little or no money in my purse, and nothing particular to interest me on shore, I thought I would sail about a little and see the watery part of the world.",
    "There was no possibility of taking a walk that day. We had been wandering, indeed, in the leafless shrubbery an hour in the morning; but since dinner (Mrs. Reed, when there was no company, dined early) the cold winter wind had brought with it clouds so sombre, and a rain so penetrating, that further outdoor exercise was now out of the question.",
    "In my younger and more vulnerable years my father gave me some advice that I've been turning over in my mind ever since. 'Whenever you feel like criticizing anyone,' he told me, 'just remember that all the people in this world haven't had the advantages that you've had.",
    "If you really want to hear about it, the first thing you'll probably want to know is where I was born, and what my lousy childhood was like, and how my parents were occupied and all before they had me, and all that David Copperfield kind of crap, but I don't feel like going into it, if you want to know the truth."
];

let startTime;
let timerInterval;
let words = [];
let currentWordIndex = 0;
let correctChars = 0;

startButton.addEventListener('click', startGame);

function startGame() {
    resetGame();
    const randomText = sampleTexts[Math.floor(Math.random() * sampleTexts.length)];
    words = randomText.split(' ');
    textDisplay.innerHTML = words.map((word, index) => `<span class="word" id="word-${index}">${word}</span>`).join('');
    highlightCurrentWord();
    textInput.focus();
    textInput.addEventListener('input', checkInput);
    startTime = new Date();
    timerInterval = setInterval(updateTimer, 1000);
}

function resetGame() {
    clearInterval(timerInterval);
    textInput.value = '';
    timerElement.textContent = 'Time: 60s';
    wpmElement.textContent = 'WPM: 0';
    textInput.disabled = false;
    textDisplay.innerHTML = '';
    currentWordIndex = 0;
    correctChars = 0;
}

function updateTimer() {
    const currentTime = new Date();
    const elapsedTime = Math.floor((currentTime - startTime) / 1000);
    const remainingTime = 60 - elapsedTime;

    if (remainingTime <= 0) {
        clearInterval(timerInterval);
        calculateWPM();
        textInput.removeEventListener('input', checkInput);
        textInput.disabled = true;
    }

    timerElement.textContent = `Time: ${remainingTime}s`;
}

function checkInput() {
    const inputText = textInput.value.trim();
    const currentWord = words[currentWordIndex];
    const wordElement = document.getElementById(`word-${currentWordIndex}`);


    if (inputText.endsWith(' ')) {
        const typedWord = inputText.trim();
        if (typedWord === currentWord) {
            wordElement.classList.remove('incorrect');
            wordElement.classList.add('correct');
            correctChars += currentWord.length + 1; // include space
            textInput.value = '';
            currentWordIndex++;
            highlightCurrentWord();
            if (currentWordIndex === words.length) {
                calculateWPM();
                clearInterval(timerInterval);
                textInput.removeEventListener('input', checkInput);
                textInput.disabled = true;
            }
        } else if (currentWord.startsWith(typedWord)) {
            wordElement.classList.remove('incorrect');
        } else {
            wordElement.classList.add('incorrect');
        }
    }
}

function highlightCurrentWord() {
    document.querySelectorAll('.word').forEach((wordElement, index) => {
        wordElement.classList.remove('current');
        if (index === currentWordIndex) {
            wordElement.classList.add('current');
        }
    });
}

function calculateWPM() {
    const elapsedTime = (new Date() - startTime) / 1000 / 60;
    const wordCount = correctChars / 5;
    const wpm = Math.floor(wordCount / elapsedTime);
    wpmElement.textContent = `WPM: ${wpm}`;
}


































"Common knowledge has bicyclists always riding into the wind, regardless of direction, a perception that is not as wrong as it may seem. On level ground, one rides as fast as is comfortable and because the bicycle is highly efficient, speed is limited by wind resistance. With a tailwind, speeding up until the wind is in one's face is fairly easy, and at that point it becomes a headwind.",
`I had the impression of being abandoned by everyone when, the whole, city rose and left for the summer. I was afraid to be left alone, and for three days I roamed dejectedly through the city, unable to understand what was happening to me. Whether I went to Nevsky Avenue, to the park, or wandered along the embankments, I never came across the people I was accustomed to meet in certain spots at certain hours all year round. They, of course, didn't know me; but I knew them all right`,
"A journey of a thousand miles begins with a single step.",
"Right I am going to tell you how this works. You're going in the drink and I am going to make a cup of tea. Underneath the floor boards is the famous river Thames. I hope for your sakes you can hold your breath for as long as it takes to boil that kettle. After that, I am going to ask you a question, one question. You are going to give me a name and if it's the right name, I send you home warm and dry in a fresh set of clothes. If it's the wrong name, you'll be fed to the crayfish.",
"Atticus said to Jem one day, I'd rather you shot at tin cans in the backyard, but I know you'll go after birds. Shoot all the blue jays you want, if you can hit 'em, but remember it's a sin to kill a mockingbird.' That was the only time I ever heard Atticus say it was a sin to do something, and I asked Miss Maudie about it.",
"It is a truth universally acknowledged, that a single man in possession of a good fortune, must be in want of a wife. However little known the feelings or views of such a man may be on his first entering a neighbourhood, this truth is so well fixed in the minds of the surrounding families, that he is considered the rightful property of some one or other of their daughters.",
"Call me Ishmael. Some years ago-never mind how long preciselyâ€”having little or no money in my purse, and nothing particular to interest me on shore, I thought I would sail about a little and see the watery part of the world.",
"There was no possibility of taking a walk that day. We had been wandering, indeed, in the leafless shrubbery an hour in the morning; but since dinner (Mrs. Reed, when there was no company, dined early) the cold winter wind had brought with it clouds so sombre, and a rain so penetrating, that further outdoor exercise was now out of the question.",
"In my younger and more vulnerable years my father gave me some advice that I've been turning over in my mind ever since. 'Whenever you feel like criticizing anyone,' he told me, 'just remember that all the people in this world haven't had the advantages that you've had.",
"If you really want to hear about it, the first thing you'll probably want to know is where I was born, and what my lousy childhood was like, and how my parents were occupied and all before they had me, and all that David Copperfield kind of crap, but I don't feel like going into it, if you want to know the truth."
];